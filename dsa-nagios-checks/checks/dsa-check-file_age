#!/bin/sh
# vim: set fileencoding=utf-8 ai noet sts=8 sw=8 tw=0:
#
# Copyright Â© 2009 Stephen Gran <sgran@debian.org>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

FILE=''
INTERVAL=60
EXIT=0

usage(){
	ret=$1

	cat <<EOF
$0: usage:
	$0 <options>

	File age checker for nagios.  Will alert if the named file is
	older than the interval (interval default is 60 minutes)

	-h	This help message
	-i	Interval in minutes at which to alert
	-f	File to check
EOF

	exit $ret
}

while getopts f:i:h opt ; do
	case "$opt" in
		f) FILE="$OPTARG" ;;
		i) INTERVAL="$OPTARG" ;;
		h) usage 0
	esac
done

if [ -z "$FILE" ]; then
	echo "Need file argument!" >&2
	usage 3
fi

if [ ! -e "$FILE" ]; then
	printf "state file %s is missing or unreadable\n" $FILE
	exit 2
fi

if [ "$(( $( date +%s ) - $(stat -c %Y $FILE) ))" -gt "$(( $INTERVAL * 60 ))" ]; then
	printf "state file %s is older than %d minutes\n" $FILE $INTERVAL
	exit 2
fi

printf "state file %s OK: updated on %s\n" $FILE "$(stat -c %y $FILE)"
